<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml" xmlns:objectstore="http://www.mulesoft.org/schema/mule/objectstore" xmlns:validation="http://www.mulesoft.org/schema/mule/validation"
	xmlns:json="http://www.mulesoft.org/schema/mule/json"
	xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/objectstore http://www.mulesoft.org/schema/mule/objectstore/current/mule-objectstore.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd">
<http:listener-config name="HTTP_Listener_Configuration" host="localhost" port="8081" doc:name="HTTP Listener Configuration"/>
    <objectstore:config name="ObjectStore__Configuration" doc:name="ObjectStore: Configuration"/>

 <flow name="xmlFTW">
    	<validation:is-true expression="#[payload.xml == 'rules!']" doc:name="Validation"/>
    	<validation:is-false expression="#[payload.xml == 'is hard']]" doc:name="Validation"/>
  </flow>


<flow name="melValidation">
  <choice doc:name="Choice">
    <when expression="#[validator.validateEmail(payload.email)]">
      <flow-ref name="xmlFTW" doc:name="Flow Reference"/>
    </when>
    <otherwise>
      <logger message="no email. Try contacting the user some other way" doc:name="Logger"/>
    </otherwise>
  </choice>
</flow>





<flow name="validationsFlow">
  <http:listener config-ref="HTTP_Listener_Configuration" path="/user" allowedMethods="POST" doc:name="HTTP"/>
  <!-- transform to Map to simplify MEL expressions -->
  <json:json-to-object-transformer returnClass="java.util.HashMap" doc:name="JSON to Object"/>
  <validation:all doc:name="Validation">
    <validation:validations>
      <validation:is-not-empty doc:name="Validation" value="#[payload.firstName]" message="Firstname cannot be empty"/>
      <validation:is-not-empty doc:name="Validation" value="#[payload.lastName]" message="Lastname cannot be empty"/>
      <validation:is-number message="Not an adult" value="#[payload.age]" minValue="18" numberType="INTEGER"/>
      <validation:matches-regex message="Invalid SSN" value="#[payload.ssn]" regex="^(?!000|666)[0-8][0-9]{2}-(?!00)[0-9]{2}-(?!0000)[0-9]{4}$"/>
      <validation:is-email email="#[payload.email]" />
      <validation:validate-size value="#[payload.ssn]" min="11" max="11" message="SSN too short"/>
    </validation:validations>
  </validation:all>
        <set-payload value="#[payload.substring(1,15)]" doc:name="Set Payload"/>
       <!--  <validation:is-empty value="" doc:name="Validation"/> -->
  <set-payload value="OK" doc:name="Set Payload"/>
</flow>
    <flow name="validationexampleFlow1">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/store" doc:name="HTTP"/>
        <objectstore:store config-ref="ObjectStore__Configuration" key="key1" value-ref="#[new Integer(10)]" doc:name="ObjectStore"/>
    </flow>
    <flow name="validationexampleFlow">
        <http:listener config-ref="HTTP_Listener_Configuration" path="/os" doc:name="HTTP"/>
        <objectstore:retrieve config-ref="ObjectStore__Configuration" key="key1" doc:name="ObjectStore"/>
        <object-to-string-transformer doc:name="Object to String"/>
    </flow>


</mule>
